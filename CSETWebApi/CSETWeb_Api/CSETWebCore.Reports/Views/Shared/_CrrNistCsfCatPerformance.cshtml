@using CSETWebCore.Helpers.ReportWidgets;
@using System.Xml.Linq;


@{
    XDocument xMappings = Model.CRRScores.XCsf;
    XDocument xAnswers = Model.CRRScores.XDoc;
}


<link rel="stylesheet" href="wwwroot/lib/bootstrap/css/bootstrap.min.css" />
<link rel="stylesheet" href="wwwroot/css/site.css" />

@{
    var answeredNo = new List<string>() { "N", "U" };

    BarChartInput GetDeepAnswerDistrib(XElement element)
    {
        var myQs = element.Descendants("CrrReference");

        var distrib = new List<int>();
        distrib.Add(myQs.Count(x => x.Attribute("answer")?.Value == "Y"));
        distrib.Add(myQs.Count(x => x.Attribute("answer")?.Value == "I"));
        distrib.Add(myQs.Count(x => answeredNo.Contains(x.Attribute("answer")?.Value)));

        var d = new BarChartInput()
        {
            AnswerCounts = distrib
        };

        return d;
    }
}

@{
    XDocument xDoc = Model.CRRScores.XCsf;
}


<div class="container">
    <div class="row">
        <div class="col-6">
            <h3 class="depiction-title">NIST Cybersecurity Framework<br />Category Performance</h3>
        </div>
        <div class="col-6">
        </div>
    </div>
</div>

<br />
@{
    var functions = xDoc.Descendants("Function");

    foreach (var function in functions)
    {
        var distFunc = GetDeepAnswerDistrib(function);
        distFunc.Height = 65;
        distFunc.Width = 150;
        distFunc.IncludePercentFirstBar = true;
        var barChart = new ScoreBarChart(distFunc);

        <div>
            <table class="domain-function" style="height: 90%; border: none;">
                <tbody>
                    <tr style="width: 100%">
                        <th style="width: 75px;">
                            <div style="text-align: center;">Function</div>
                        </th>
                        <th class="category">Category</th>
                        <th class="subcategory">Subcategory</th>
                        <th class="references">CRR References</th>
                    </tr>

                    @* Top Row *@
                    @{
                        var rowspan = function.Descendants("Subcategory").Count();
                    }
                    <tr class="bb-2" style="border: none;">

                        <td rowspan="@rowspan" style="height: 100%; padding: 0; background-color: @Model.CRRScores.CsfFunctionColors[function.Attribute("code").Value]; border: none;">
                            <div class="function">
                                @{
                                    var label = String.Format("{0} ({1})",
                                    function.Attribute("name")?.Value.ToUpper(),
                                    function.Attribute("code")?.Value.ToUpper());

                                    <div class="vertical-text">@Html.Raw(label)</div>

                                }
                            </div>
                        </td>
                        <td style="padding: 0 1rem; border: none;">
                            @{
                                var summary = String.Format("<b>{0} Summary</b>",
                                @function.Attribute("name")?.Value.ToUpper());
                                @Html.Raw(summary)
                            }
                            <br />
                            @Html.Raw(barChart)
                        </td>
                        <td colspan="2" style="font-size: 12px; border: none;">
                            <b>
                                @function.Attribute("desc")?.Value
                            </b>
                        </td>
                    </tr>
                    @* Categories *@
                    @{
                        foreach (var category in function.Elements("Category"))
                        {

                            var s2 = "";
                            if (!category.Equals(function.Elements("Category").Last()))
                            {
                                s2 = "bb-2";
                            }

                            var subcategories = category.Elements("Subcategory");
                            var subRowspan = subcategories.Count() + 1;
                            <tr class="@s2" style="border: none;">
                                <td class="category" style="padding: 0 1rem; font-size: 10px; border: none;">
                                    @{
                                        var description = $"<b>{category.Attribute("name").Value} ({category.Attribute("code").Value}):</b> {category.Attribute("desc").Value}";
                                        @Html.Raw(description)

                                        <br /><br /><br />
                                        @if (category.Element("References") != null)
                                        {
                                            @Html.Raw("CRR Practices<br />")
                                            var mappedQs = category.Element("References").Elements().ToList(); ;

                                            var block = new NistDomainBlock(mappedQs);
                                            foreach (string heatmap in block.HeatmapList)
                                            {
                                                @Html.Raw(heatmap);
                                            }
                                        }

                                    }
                                </td>
                                <td colspan="2" style="padding: 0; border: none;">
                                    <table style="margin: 0; border: none;">
                                        @{
                                            foreach (var subcategory in subcategories)
                                            {

                                                var s1 = "";
                                                if (!subcategory.Equals(category.Elements("Subcategory").Last()))
                                                {
                                                    s1 = "bb-1";
                                                }

                                                <tr class="@s1" style="padding: 1rem; font-size: 10px; border: none;">
                                                    <td style="width: 210px; padding: 0.25rem; border: none;">
                                                        @{
                                                            description = $"<b>{subcategory.Attribute("title").Value}:</b> {subcategory.Attribute("desc").Value}";
                                                            @Html.Raw(description)
                                                        }
                                                    </td>
                                                    <td class="references" style="width: 280px; border: none;">
                                                        @{
                                                            var mappedQs = subcategory.Element("References").Elements().ToList();

                                                            var block = new NistDomainBlock(mappedQs);
                                                            foreach (string heatmap in block.HeatmapList)
                                                            {
                                                                @Html.Raw(heatmap)
                                                            }

                                                        }
                                                    </td>
                                                </tr>


                                            }
                                        }
                                    </table>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

        </div>

        @if (function.Attribute("code").Value != "RC")
        {
            <div class="break"></div>
        }
    }
}

<style>

    .function {
        font-weight: bolder;
        height: 100%;
        width: 75px;
        display: block;
        position: relative;
    }

    .vertical-text {
        color: #fff;
        transform: rotate(-90deg);
        padding: 50px 10px;
        line-height: 24px;
    }

    .category {
        width: 300px;
    }

    .subcategory {
        width: 210px;
    }

    .references {
        width: 280px;
    }

    .references svg {
        vertical-align: top;
    }


    table {
        page-break-inside: auto;
    }

    th {
        background-color: black;
        color: #fff;
        font-size: 10px;
        font-weight: bold;
        text-align: left;
        height: 20px;
    }



    tr, td {
        page-break-inside: avoid !important;
    }


    .bb-1 {
        border-bottom: solid 1px black !important;
    }

    .bb-2 {
        border-bottom: solid 2px black !important;
    }

    .bb-3 {
        border-bottom: solid 3px black;
    }

    .break {
        page-break-before: always;
    }
</style>