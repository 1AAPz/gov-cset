@using CSETWebCore.Model.Maturity
@using CSETWebCore.Business.Reports
@model MaturityBasicReportData

@{
    // -------------------------
    // This view can be used to display various answer lists.
    // -------------------------

    var answerList = new List<MatRelevantAnswers>(); ;

    if (Model.TargetList == "deficiency")
    {
        answerList = Model.AddMissingParentsTo(Model.DeficienciesList);
    }

    if (Model.TargetList == "comments")
    {
        answerList = Model.AddMissingParentsTo(Model.Comments);
    }

    if (Model.TargetList == "mfr")
    {
        answerList = Model.AddMissingParentsTo(Model.MarkedForReviewList);
    }

    if (Model.TargetList == "alt")
    {
        answerList = Model.AddMissingParentsTo(Model.AlternateList);
    }



    foreach (string domainName in answerList.Select(x => x.Mat.Category).Distinct())
    {
        await RenderDomain(domainName);
    }


    @* Render a domain and its member questions *@
    async Task RenderDomain(string domainName)
    {
        var answersForDomain = answerList.Where(x => x.Mat.Category == domainName).ToList();


        // mark questions followed by a child so we can hide borders
        for (var i = 0; i < answersForDomain.Count() - 1; i++)
        {
            if (answersForDomain[i + 1].Mat.Parent_Question_Id != null)
            {
                answersForDomain[i].IsFollowedByChild = true;
            }
        }

        <div class="report-domain-header mx-3">
            @domainName
        </div>

        foreach (var ans in answersForDomain)
        {
            await Html.RenderPartialAsync("_MatAnswerFull", ans);
        }
    }


}