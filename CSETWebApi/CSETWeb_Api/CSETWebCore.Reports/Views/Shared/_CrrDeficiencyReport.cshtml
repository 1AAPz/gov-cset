@using System.IO;
@model CrrViewModel

@{
    Layout = "_CrrBasicReportBase";
    ViewData["Title"] = "DEFICIENCY REPORT";
}

@section Summary {
    <div style="padding: 5rem 1rem 5rem 1rem">
        <p>
            This deficiency report lists the statements that are not currently compliant or "No" answers.
        </p>
        <p>
            This is often referred to as the GAP Report. This report intends to list the gaps, assist users of
            the report in identifying gaps, prioritizing work, and beginning to make a plan to address
            the gaps by implementing the controls necessary to come into compliance with the associated statement.
        </p>
        <p>
            The percentage gap in each domain is also listed and will help to determine the priority.
            CRR is a cumulative maturity model meaning lower levels should be completed before
            moving to higher levels. Ideally baseline should be completed before focusing efforts on
            controls in evolving and so forth up the line of maturity levels.
        </p>
    </div>
}

@section Content {

    <div class="mx-3 form">
        <div class="d-flex flex-row justify-content-between align-items-end">
            <h1 class="report-section-title">Deficiencies</h1>
            <p style="color: #de761c; text-align: right;">
                @{
                    var flagBinary = File.ReadAllBytes(@Url.Content("wwwroot/images/icons/MarkedFlag.png"));
                    var flagURI = @"data:image/png;base64," + Convert.ToBase64String(flagBinary);
                    var flagHtml = String.Format("<img src='{0}' class=\"marked-flag\">", flagURI);
                }
                Marked for Review - @Html.Raw(flagHtml)
            </p>
        </div>
    </div>

    <hr class="page-line m-0" />

        @{
            if (Model.ReportData.DeficienciesList.Count == 0)
            {
                <div class="row">
                    <div class="col text-start">
                        <p>There are no deficiencies to display.</p>
                    </div>
                </div>
            }
            else
            {
                await Html.RenderPartialAsync("_MatAnswersListCrr", Model.ReportData.AddMissingParentsTo(Model.ReportData.DeficienciesList));
            }
        }
    </div>
}
