@model ReportViewModel

@{
    Layout = "_BasicReportBase";
    ViewData["Title"] = "DEFICIENCY REPORT";
}

@section Summary {
    <div style="padding: 1rem 1rem 0 1rem">
        <p>
            This deficiency report lists the statements that are not currently compliant or "No" answers.
        </p>
        <p>
            This is often referred to as the GAP Report. This report intends to list the gaps, assist users of
            the report in identifying gaps, prioritizing work, and beginning to make a plan to address
            the gaps by implementing the controls necessary to come into compliance with the associated statement.
        </p>

        @if (ViewData["GrayBlockParagraph"] != null)
        {
            <p>
                @ViewData["GrayBlockParagraph"]
            </p>
        }
    </div>
}

@section Content {

    <div class="mx-3 form">
        <div class="d-flex flex-row justify-content-between align-items-end">
            <h1 class="report-section-title">Deficiencies</h1>
            <p style="color: #de761c; text-align: right;">
                Marked for Review - <img src="@TempData["Links"]/images/icons/MarkedFlag.png"
                                         alt="marked for review" class="marked-flag">
            </p>
        </div>
    </div>

    <hr class="page-line m-0" />

    @{
        if (Model.ReportData.DeficienciesList?.Count > 0)
        {
            Model.ReportData.TargetList = "deficiency";
            await Html.RenderPartialAsync("_MatAnswersList", Model.ReportData);
        }
        else
        {
            <div class="row">
                <div class="col text-start">
                    <p>There are no deficiencies to display.</p>
                </div>
            </div>
        }
    }
}
