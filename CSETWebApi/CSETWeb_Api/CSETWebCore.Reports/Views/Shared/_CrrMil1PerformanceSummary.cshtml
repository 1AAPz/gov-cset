@using CSETWebCore.Helpers.ReportWidgets;
@using System.Xml.Linq;
@model CrrViewModel


@{

    var XDocument = Model.CRRScores.xDoc;
    async void RenderMil1()
    {
        <h3>CRR MIL-1 Summary</h3>
        <hr />
        <div class="row mt-2 mb-2" style="border-top: solid 1px black; border-bottom: solid 1px black;">
            <div class="col-md-4">
                <p>DOMAIN SUMMARY</p>
            </div>
            <div class="col-md-8">
                <p>MIL-1 PRACTICE LEVEL PERFORMANCE SUMMARY</p>
            </div>
        </div>


        foreach (XElement domain in XDocument.Root.Elements())
        {
            var domainScores = Model.CRRScores.DomainAnswerDistrib(domain.Attribute("abbreviation").Value);
            var barChartInput = new BarChartInput() { Height = 100, Width = 200 };
            barChartInput.AnswerCounts = new List<int> { domainScores.Green, domainScores.Yellow, domainScores.Red };
            var barChart = new ScoreBarChart(barChartInput);


            <div class="row" style="border-bottom: 2px solid #000">
                <div class="col-md-2">
                    @domain.Attribute("title").Value
                    @Html.Raw(barChart.ToString())
                </div>
                
                <div class="col-md-10">
                    @{ 
                        foreach (XElement goal in domain.Elements().Elements())
                        {
                            if (goal.Attribute("title").Value.Contains("Goal"))
                            {
                                var goalScores = Model.CRRScores.GoalAnswerDistrib(domain.Attribute("abbreviation").Value, goal.Attribute("abbreviation").Value);
                                var stackedBarChartInput = new BarChartInput() { Height = 20, Width = 275 };
                                stackedBarChartInput.AnswerCounts = new List<int> { goalScores.Green, goalScores.Yellow, goalScores.Red };

                                var stackedChart = new ScoreStackedBarChart(stackedBarChartInput);

                                <div class="row">
                                    <div class="col-md-8">@goal.Attribute("title").Value</div>
                                    <div class="col-md-4" style="padding: 0.25rem;">@Html.Raw(stackedChart.ToString())</div>
                                </div>
                            }
                            
                            }
                        }

                </div>
            </div>
        }
    }
}



<h1>CRR MIL-1 Performance Summary</h1>
<div class="row mb-5" style="font-family: Verdana, sans-serif">
    @{ RenderMil1(); }
</div>
