@using System.IO
@using CSETWebCore.Model.Maturity
@model MatRelevantAnswers

@{
    var flagBinary = File.ReadAllBytes(@Url.Content("wwwroot/images/icons/MarkedFlag.png"));
    var flagURI = @"data:image/png;base64," + Convert.ToBase64String(flagBinary);
    var flagHtml = String.Format("<img src='{0}' class=\"marked-flag\">", flagURI);
}

<div class="col-3 text-start">
    @if (Model.Mat.Parent_Question_Id == null)
    {
        <h3 class="small d-inline">Practice @Model.Mat.Question_Title</h3>
    }
</div>
<div class="col-6 text-start">
    <p>
        @Model.Mat.Question_Text
    </p>
</div>
<div class="col-2 text-end">
    @{
        if (!Model.IsParentWithChildren)
        {
            <p>
                @await Html.PartialAsync("_MatAnswerText", Model.ANSWER.Answer_Text)
            </p>
        }
    }
</div>

<div class="col-1 text-end">
    @if (Model.ANSWER.Mark_For_Review is true)
    {
        @Html.Raw(flagHtml)
    }
</div>