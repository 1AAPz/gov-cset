@using CSETWebCore.Reports.Models
@using CSETWebCore.Helpers.ReportWidgets
@using System.Xml.Linq;
@model CrrViewModel

<link rel="stylesheet" href="@(TempData["links"]+"/lib/bootstrap/css/bootstrap.min.css")" />
<link rel="stylesheet" href="@(TempData["links"]+"/css/site.css")" />

@{
    var XDocument = Model.CRRScores.XDoc;
    async void RenderAppendix()
    {

        <div class="row">
            <div class="col-1" style="padding: 0; width: 20%;  position: relative;">
                <div class="row tinytext" style="min-width: 150px;">
                    <div style="padding: 0.1rem; width: 50px;">
                        <p>Total number of practices performed</p>
                    </div>
                    <div style="padding: 0.1rem; width: 50px;">
                        <p>Total number of practices incompletely performed</p>
                    </div>
                    <div style="padding: 0.1rem; width: 50px;">
                        <p>Total number of practices not performed</p>
                    </div>

                </div>
                <div style="position: absolute; bottom: 0; left: 0;">
                    <div class="row" style="padding-top: 1rem;">
                        <div class="col">
                            @{
                                var totalDistribution = Model.CRRScores.MIL1FullAnswerDistrib();
                                var totalBarChartInput = new BarChartInput() { Height = 50, Width = 150 };
                                totalBarChartInput.AnswerCounts = new List<int>
                                                    { totalDistribution.Green, totalDistribution.Yellow, totalDistribution.Red };
                                var totalBarChart = new ScoreBarChart(totalBarChartInput);

                            }
                            @Html.Raw(totalBarChart.ToString())
                        </div>

                    </div>
                    <div class="row">
                        <div class="col">
                            <h5 class="appendix-label">CRR Summary</h5>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-1" style="padding: 0 1rem; width: 80%;">
                <div class="row">
                    <div class="col-6">
                        <h3 class="depiction-title">CRR Performance</h3>
                    </div>

                    <div class="col-6" style="padding: 0;">
                        @{
                            var legend = new MIL1PerformanceLegend();
                        }
                        @Html.Raw(legend.ToString())
                    </div>
                </div>
                <div class="row header" style="border-top: 1px solid black;">
                    <div style="width: 60%;">
                        <p>
                            <b>MIL-1 Performed</b>
                            <br />
                            Domain practices are being performed.
                        </p>
                    </div>
                    <div style="width: 10%;">
                        <p>
                            <b>MIL-2 Planned</b>
                            <br />
                            Domain practices
                            are supported by
                            planning, policy,
                            stakeholders, and
                            standards.
                        </p>
                    </div>
                    <div style="width: 10%;">
                        <p>
                            <b>MIL-3 Managed</b>
                            <br />
                            Domain practices
                            are supported by
                            governance and
                            adequate
                            resources.
                        </p>
                    </div>
                    <div style="width: 10%;">
                        <p>
                            <b>MIL-4 Measured</b>
                            <br />
                            Domain practices
                            are supported by
                            measurement,
                            monitoring, and
                            executive
                            oversight.
                        </p>
                    </div>
                    <div style="width: 10%;">
                        <p>
                            <b>MIL-5 Defined</b>
                            <br />
                            Domain practices
                            are supported by
                            enterprise
                            standardization
                            and analysis of.
                            lessons learned.
                        </p>
                    </div>
                </div>

            </div>

        </div>

        <div class="row" style="border-top: solid 1.5px black;">
            <div style="width: 20%; padding: 0; font-size: 10px;">
                DOMAIN SUMMARY
            </div>
            <div style="width: 80%; padding: 0; font-size: 10px;">
                MIL-1 PRACTICE LEVEL PERFORMANCE SUMMARY
            </div>
        </div>


        foreach (XElement domain in XDocument.Root.Elements())
        {
            var domainScores = Model.CRRScores.MIL1DomainAnswerDistrib(domain.Attribute("abbreviation").Value);
            var barChartInput = new BarChartInput() { Height = 45, Width = 100 };
            barChartInput.AnswerCounts = new List<int> { domainScores.Green, domainScores.Yellow, domainScores.Red };
            var barChart = new ScoreBarChart(barChartInput);

            <div class="row" style="border-top: 1px solid black;">
                <div class="col" style="width: 20%;">
                    <div class="row">
                        <p style="font-size: 0.5rem; font-weight: bold;">
                            @domain.Attribute("title").Value.Split('(')[0].Trim()
                        </p>
                    </div>
                    <div class="row">
                        @Html.Raw(barChart.ToString())
                    </div>
                </div>
                <div class="col-10" style="display: flex; width: 80%; padding: 0;">
                    <div style="width: 60%;">
                        @{
                            XElement mil1 = domain.Descendants("Mil").FirstOrDefault(el => el.Attribute("label") != null &&
                    el.Attribute("label").Value == "MIL-1");
                            var mil1Svg = new MilHeatMap(mil1, true, false, 10);
                        }
                        @Html.Raw(mil1Svg.ToString())
                    </div>
                    <div style="width: 10%;">
                        @{
                            XElement mil2 = domain.Descendants("Mil").FirstOrDefault(el => el.Attribute("label") != null &&
                    el.Attribute("label").Value == "MIL-2");
                            var mil2Svg = new MilHeatMap(mil2, true, false, 10);
                        }
                        @Html.Raw(mil2Svg.ToString())
                    </div>
                    <div style="width: 10%;">
                        @{
                            XElement mil3 = domain.Descendants("Mil").FirstOrDefault(el => el.Attribute("label") != null &&
                    el.Attribute("label").Value == "MIL-3");
                            var mil3Svg = new MilHeatMap(mil3, true, false, 10);
                        }
                        @Html.Raw(mil3Svg.ToString())
                    </div>
                    <div style="width: 10%;">
                        @{
                            XElement mil4 = domain.Descendants("Mil").FirstOrDefault(el => el.Attribute("label") != null &&
                    el.Attribute("label").Value == "MIL-4");
                            var mil4Svg = new MilHeatMap(mil4, true, false, 10);
                        }
                        @Html.Raw(mil4Svg.ToString())
                    </div>
                    <div style="width: 10%;">
                        @{
                            XElement mil5 = domain.Descendants("Mil").FirstOrDefault(el => el.Attribute("label") != null &&
                    el.Attribute("label").Value == "MIL-5");
                            var mil5Svg = new MilHeatMap(mil5, true, false, 10);
                        }
                        @Html.Raw(mil5Svg.ToString())
                    </div>
                </div>
            </div>
        }



    }


}


<div class="container">
    @{ RenderAppendix(); }
</div>


<style>
    .crr-logo {
        height: 75px;
        width: auto;
        max-width: 250px;
    }

    .tinytext {
        font-size: 4px;
    }

    .header div {
        padding: 0;
    }

    div p {
        font-size: 8px;
        padding: 0;
        /*margin: 0;*/
    }

    .appendix-label {
        font-size: 0.75rem;
        font-weight: bold;
        margin: 0;
    }
</style>